index.js
import React from "react";
import ReactDOM from "react-dom";
import "./index.css";
import App from "./App";
import * as serviceWorker from "./serviceWorker";
import { createStore } from "redux";
import { Provider } from "react-redux";
import { BrowserRouter } from "react-router-dom";
import Reducer from "./reducers/Reducers";

const store = createStore(Reducer);

ReactDOM.render(
	<Provider store={store}>
		<BrowserRouter>
			<App />
		</BrowserRouter>
		,
	</Provider>,

	document.getElementById("root")
);

// If you want your app to work offline and load faster, you can change
// unregister() to register() below. Note this comes with some pitfalls.
// Learn more about service workers: https://bit.ly/CRA-PWA
serviceWorker.unregister();




app.js
import React, { Component } from "react";
import { BrowserRouter as Router, Switch, Route, Link } from "react-router-dom";
import AppBar from "@material-ui/core/AppBar";
import Toolbar from "@material-ui/core/Toolbar";
import Typography from "@material-ui/core/Typography";
import Button from "@material-ui/core/Button";
import Addbus from "./components/Addbus";
import Booktickets from "./components/Booktickets";
import ViewDetails from "./components/ViewDetails";

export default class App extends Component {
	render() {
		return (
			<div>
				<AppBar position="static">
					<Toolbar>
						<Typography variant="h6"> Travel agency</Typography>
					</Toolbar>
				</AppBar>
				<AppBar position="static" color="default">
					<Router>
						<ul>
							<li>
								<Link to="/Addbus">Addbus</Link>
							</li>
							<li>
								<Link to="/Booktickets">Booktickets</Link>
							</li>
							<li>
								<Link to="/viewdetails">Viewdetails</Link>
							</li>
						</ul>
						<Switch>
							{/* <Route exact path="/" component={Login}></Route> */}
							<Route exact path="/Addbus" component={Addbus}></Route>
							<Route exact path="/Booktickets" component={Booktickets}></Route>
							<Route exact path="/viewdetails" component={ViewDetails}></Route>
						</Switch>
					</Router>
				</AppBar>
			</div>
		);
	}
}

addbus.js
import React, { Component } from "react";
import { connect } from "react-redux";

import TextField from "@material-ui/core/TextField";
import Button from "@material-ui/core/Button";
import adding from "../actions/actioning";
import addingseats from "../actions/actioning";

class Addbus extends Component {
	constructor(props) {
		super(props);
		this.state = {
			detail: {
				// noofseats: "",
				type: "",
				make: "",
				startcities: "",
				endcities: "",
			},
			noofseats: 100,
		};
	}
	handleChange = (e) => {
		let name = e.target.name;
		let value = e.target.value;
		this.setState({
			detail: {
				...this.state.detail,
				[name]: value,
			},
		});
	};
	handleChangeone = (e) => {
		let name = e.target.name;
		let value = e.target.value;
		this.setState({
			detail: {
				...this.state.noofseats,
				[name]: value,
			},
		});
	};
	addBus = (e) => {
		e.preventDefault();
		let { dispatch } = this.props;
		dispatch(adding("ADD_BUS", this.state.detail));
	};
	addseats = (e) => {
		e.preventDefault();
		let { dispatch } = this.props;
		dispatch(addingseats("ADD_SEATS", this.state.noofseats));
	};
	render() {
		return (
			<form>
				<div>
					<div>
						<label>
							No of seats
							<TextField
								id="outlined-basic"
								type="number"
								name="noofseats"
								variant="outlined"
								onChange={this.handleChangeone}
							/>
						</label>
					</div>
					<div>
						<label>
							Type
							<TextField
								id="outlined-basic"
								type="text"
								name="type"
								variant="outlined"
								onChange={this.handleChange}
							/>
						</label>
					</div>
					<div>
						<label>
							Make
							<TextField
								id="outlined-basic"
								type="text"
								name="make"
								variant="outlined"
								onChange={this.handleChange}
							/>
						</label>
					</div>
					<div>
						<label>
							start cities
							<TextField
								id="outlined-basic"
								type="text"
								name="startcities"
								variant="outlined"
								onChange={this.handleChange}
							/>
						</label>
					</div>
					<div>
						<label>
							End cities
							<TextField
								id="outlined-basic"
								type="text"
								name="endcities"
								variant="outlined"
								onChange={this.handleChange}
							/>
						</label>
					</div>
					<Button
						type="button"
						variant="contained"
						onClick={this.addBus}
						color="primary"
					>
						Add Bus
					</Button>
					<Button
						type="button"
						variant="contained"
						onClick={this.addseats}
						color="primary"
					>
						Add seats
					</Button>
				</div>
			</form>
		);
	}
}
const mapStateToProps = (state) => {
	console.log("sdfghj", state);
	return {
		busadd: state,
	};
};
export default connect(mapStateToProps)(Addbus);



booktickets.js
import React, { Component } from "react";

import { connect } from "react-redux";

import TextField from "@material-ui/core/TextField";
import Button from "@material-ui/core/Button";

import FormControlLabel from "@material-ui/core/FormControlLabel";
import FormControl from "@material-ui/core/FormControl";
import FormLabel from "@material-ui/core/FormLabel";
import { InputLabel, MenuItem } from "@material-ui/core";
import Select from "@material-ui/core/Select";
import { bookticket } from "../actions/actioning";

class Booktickets extends Component {
	constructor(props) {
		super(props);
		this.state = {
			detailone: {
				start: "",
				destination: "",
				noofseats: "",
			},
		};
	}
	handleChange = (e) => {
		let name = e.target.name;
		let value = e.target.value;
		this.setState({
			detailone: {
				...this.state.detailone,
				[name]: value,
			},
		});
	};
	addListone = (e) => {
		e.preventDefault();
		// console.log(e);
		console.log(this.state.detailone);
		let { dispatch } = this.props;
		dispatch(bookticket("BOOK_TICKET", this.state.detailone));
	};

	render() {
		return (
			<div>
				<form>
					<div>
						<br />
						<div>
							<FormControl>
								<InputLabel>Starting Point</InputLabel>
								<Select
									name="start"
									value={this.state.detailone.start}
									onChange={this.handleChange}
								>
									{this.props.ticketss.bus.map((a, b) => {
										console.log(a);
										return (
											<MenuItem value={a.startcities}>{a.startcities}</MenuItem>
										);
									})}

									{/* <MenuItem value="bangalore">Bangalore</MenuItem>
									<MenuItem value="Mysore">Mysore</MenuItem>
									<MenuItem value="Shimoga">Shimoga</MenuItem> */}
								</Select>
							</FormControl>
						</div>

						<br />

						<div>
							<FormControl>
								<InputLabel>Destination</InputLabel>
								<Select
									name="destination"
									value={this.state.detailone.destination}
									onChange={this.handleChange}
								>
									{this.props.ticketss.bus.map((a, b) => {
										console.log(a);
										return (
											<MenuItem value={a.endcities}>{a.endcities}</MenuItem>
										);
									})}
									{/* <MenuItem value="bangalore">Bangalore</MenuItem>
									<MenuItem value="Mysore">Mysore</MenuItem>
									<MenuItem value="Shimoga">Shimoga</MenuItem> */}
								</Select>
							</FormControl>
						</div>
						<div>
							<label>
								No of seats
								<TextField
									id="outlined-basic"
									type="number"
									name="noofseats"
									variant="outlined"
									onChange={this.handleChange}
								/>
							</label>
						</div>
					</div>
					<br />
					<br />

					<br />
					<br />
					<Button
						type="button"
						variant="contained"
						color="primary"
						onClick={this.addListone}
					>
						Submit
					</Button>
				</form>
			</div>
		);
	}
}

const mapStateToProps = (state) => {
	console.log("asdsdadsada", state);
	return {
		ticketss: state,
	};
};
export default connect(mapStateToProps)(Booktickets);



viewdetails.js
import React, { Component } from "react";
import { connect } from "react-redux";
import { Link } from "react-router-dom";
import { makeStyles } from "@material-ui/core/styles";
import Table from "@material-ui/core/Table";
import TableBody from "@material-ui/core/TableBody";
import TableCell from "@material-ui/core/TableCell";
import TableContainer from "@material-ui/core/TableContainer";
import TableHead from "@material-ui/core/TableHead";
import TableRow from "@material-ui/core/TableRow";
import Paper from "@material-ui/core/Paper";
import Button from "@material-ui/core/Button";
import finalbookticket from "../actions/actioning";

class ViewDetails extends Component {
	usage = (e) => {
		e.preventDefault();
		// console.log(e);
		// console.log(this.state.detailone);
		let { dispatch } = this.props;
		dispatch(finalbookticket("FINAL_BOOK_TICKET", this.props.teamss.seats));
	};
	render() {
		return (
			<TableContainer component={Paper}>
				<Table aria-label="simple table">
					<TableHead>
						<TableRow>
							<TableCell>Starting Point</TableCell>
							<TableCell>Ending Point</TableCell>
							<TableCell>No of seats</TableCell>
							{/* <TableCell>Description</TableCell> */}
						</TableRow>
					</TableHead>
					<TableBody>
						{this.props.teamss.ticket.map((team, index) => {
							console.log(team);
							return (
								<TableRow key={index}>
									<TableCell>{team.buses.start}</TableCell>
									<TableCell>{team.buses.destination}</TableCell>
									<TableCell>{team.buses.noofseats}</TableCell>
									<Button
										type="button"
										variant="contained"
										color="primary"
										onClick={this.usage}
									>
										Book
									</Button>
								</TableRow>
							);
						})}
					</TableBody>
				</Table>
			</TableContainer>
		);
	}
}
const mapStateToProps = (state) => {
	console.log("asdsdadsada", state);
	return {
		teamss: state,
	};
};
export default connect(mapStateToProps)(ViewDetails);


actioning.js
const adding = (actionType, buses) => {
	console.log(buses);
	return {
		type: actionType,
		buses: buses,
	};
};
export default adding;

export const bookticket = (actionType, buses) => {
	console.log(buses);
	return {
		type: actionType,
		buses: buses,
	};
};
export const addingseats = (actionType, buses) => {
	console.log(buses);
	return {
		type: actionType,
		buses: buses,
	};
};
// export default bookticket;
export const finalbookticket = (actionType, buses) => {
	console.log(buses);
	return {
		type: actionType,
		buses: buses,
	};
};

reducers.js
const initialState = {
	bus: [],
	ticket: [],
	seats: [],
};

const Reducer = (state = initialState, action) => {
	console.log("to update", state, action);

	switch (action.type) {
		case "ADD_BUS":
			const buses = action.buses;
			return {
				...state,
				bus: [...state.bus, buses],
			};

		case "BOOK_TICKET":
			// const { tickets } = action;
			return {
				...state,
				ticket: [...state.ticket, action],
			};
		case "ADD_SEATS":
			return {
				...state,
				seats: [...state.seats, action],
			};
		case "FINAL_BOOK_TICKET":
			return {
				...state,
				seats: Number(state.seats) - Number(state.ticket.noofseats),
			};

		default:
			return state;
	}
};
export default Reducer;



